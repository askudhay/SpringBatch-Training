<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
    http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

	<import resource="jobContext.xml" />

	<bean id="myReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="fragmentRootElementName" value="Employee" />
		<property name="resource" value="classpath:xml/employees.xml" />
		<property name="unmarshaller" ref="empUnMarshaller" />
	</bean>

	<bean id="empUnMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<value>com.spring.ex.Employee</value>
		</property>
	</bean>

	<bean id="myWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:csv/employees.csv" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="empid" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<batch:job id="xmltocsv" restartable="true" job-repository="jobRepository">
		<batch:step id="firstStep">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="myReader" writer="myWriter"
					commit-interval="1">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

</beans>